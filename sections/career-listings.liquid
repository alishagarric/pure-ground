{% style %}
    #Career-listings-{{ section.id }} {
      --topSpacingRatio: {{ section.settings.top_spacing }} / 100;
      --bottomSpacingRatio: {{ section.settings.bottom_spacing }} / 100;
    }
{% endstyle %}


{% comment %} Make sure user added positions {% endcomment %}

  {% comment %} Variables needed to gather department nav data {% endcomment %}
  {% assign default_department = "General" %}

  <div id="Career-listings-{{ section.id }}" class="career-listings color-{{section.settings.color_scheme}}">
   <div class="career-listings__headline-content">
      {% if section.settings.heading %}
         <h2 class="career-listings__heading h5">{{ section.settings.heading }}</h2>
      {% endif %}
    
      {% if section.settings.text %}
         <div class="career-listings__content__text __article-txt">{{ section.settings.text }}</div>
      {% endif %}
   </div>

   {% if section.blocks.size > 0 %}
      <div class="career-listings__container">
         {% comment %} Loop through positions {% endcomment %}
         <div class="career-listings__positions">
         {%- for block in section.blocks -%}
            {% if block.settings.heading %}
            {% comment %} Assign department variables {% endcomment %}
            {% assign department = default_department %}
               {% if block.settings.department %}
                  {% assign department = block.settings.department %}
               {% endif %}
            {% assign department_handle = department | handleize %}

            {% comment %} Output position {% endcomment %}
               <div class="career-listings__position __active" data-department="{{ department_handle }}">
                  <h3 class="h5">{{ block.settings.heading }}</h3>
                  {% if block.settings.button_link and block.settings.button_label %}
                     <a class="career-listings__position__btn btn __btn-clr-{{block.settings.button_color}}" {% if block.settings.button_link == blank %} role="link" aria-disabled="true"{% else %} href="{{ block.settings.button_link }}"{% endif %} {{ block.shopify_attributes }}>
                        {{ block.settings.button_label | escape }}
                           {% render 'icon-arrow' %}
                     </a>
                  {% endif %}

                  {% if block.settings.location %}
                     <div>
                        {% render 'svg-location' %}
                        <span>{{ block.settings.location }}</span>
                     </div>
                  {% endif %}

                  {% if block.settings.details %}
                     <toggle-modal class="career-listings__modal" data-type="container">
                        <p>Details</p>
                     </toggle-modal>{% render 'position-modal', position_heading: block.settings.heading, position_details: block.settings.details %}
                  {% endif %}
               </div>

                  {% comment %} 
                     Add position department to departments string, 
                     which we will split into an array after the loop is completed 
                  {% endcomment %}
                  {% if departments == nil %}
                     {% assign departments = departments | append: department %}
                  {% else %}
                     {% assign departments = departments | append: "$$$" | append: department %}
                  {% endif %}
                  {% endif %}
                  {%- endfor -%}
               </div>
                  {% comment %} Split departments string into an array {% endcomment %}
                  {% assign departments = departments | split: "$$$" %}
                  {% assign unique_departments = departments | uniq %}

                  {% comment %} 
                  Output positions nav if there's more than 
                  one department to navigate through 
                  {% endcomment %}
                  <div class="career-listings__content">
               <div class="career-listings__departments">
                  <p class="p-sm">Departments</p>
                  {% if departments.size > 1 %}
                     <ul class="career-listings__nav hide">
                        <li class="career-listings__nav__item">
                           <positions-button
                              class="career-listings__button caption __active"
                              data-department="all"
                           >
                              All ({{ section.blocks.size }})
                           </positions-button>
                        </li>
                     {%- for uniqueDepartment in unique_departments -%}
                     {% comment %} Get Unique Categories {% endcomment %}
                  {% assign count = 0 %}
                    {%- for department in departments -%}
                        {% if department == uniqueDepartment %}
                           {% assign count = count | plus: 1 %}
                        {% endif %}
                     {% endfor %}
                        {% assign department_handle = uniqueDepartment | handleize %}
                        {% comment %} Each nav item {% endcomment %}
                        <li class="career-listings__nav__item">
                           {% comment %} Tag logic below sets listener on {% endcomment %}
                           <positions-button
                              class="career-listings__button caption"
                              data-department="{{ department_handle }}"
                           >
                              {{ uniqueDepartment }} ({{ count }})
                           </positions-button>
                        </li>
                     {%- endfor -%}
                  </ul>
               {% endif %}
            </div>
         {% endif %}
      </div>
  </div>

{% javascript %}

  class PositionsNavButton extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    //Add a on click listener to every position department nav button
    setupListener() {
      this.addEventListener('click', this.updateDepartment.bind(this));
    }

    //on department nav button click, updates what is active
    updateDepartment() {

      //parent element for this section
      var thisSection = this.parentNode.parentNode.parentNode.parentNode.parentNode;
      //clicked on item's department
      var category = this.getAttribute('data-department');
      console.log(category,'category');
      //all positions in this section
      var categoryItems = thisSection.querySelectorAll('.career-listings__position');
      //all nav buttons
      var categoryNavItems = thisSection.querySelectorAll('.career-listings__button');

      //remove or add active class on positions
      for ( var i = 0; i < categoryItems.length; i++ ){
        if (categoryItems[i].getAttribute('data-department') == category || category == "all"){
          categoryItems[i].classList.add('__active');
        }
        else {
          categoryItems[i].classList.remove('__active');
        }
      }

      //remove active class on nav buttons
      for (var i = 0; i < categoryNavItems.length; i++ ) {
        categoryNavItems[i].classList.remove('__active');
      }

      //add active class on clicked item
      this.classList.add('__active');
    }
  }

  customElements.define('positions-button', PositionsNavButton);

  class ToggleModal extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    setupListener() {
      this.addEventListener('click', this.toggleModal.bind(this));
    }

    toggleModal() {
      var modal = this.getAttribute('data-type') == "modal" ? this : this.nextElementSibling;
      modal.classList.toggle("__active");
    }
  }

  customElements.define('toggle-modal', ToggleModal);


   let subNav = document.querySelector('.career-listings__content .p-sm');
   let subNavItems = document.querySelector('.career-listings__nav');

   subNav.onclick = () =>{
       subNavItems.classList.toggle('hide');
   };
{% endjavascript %}


{% schema %}
{
   "name":"Career Listings",
   "tag":"section",
   "class":"section",
   "settings":[
      {
         "type":"header",
         "content":"Text Content"
      },
      {
         "type":"text",
         "label":"Heading",
         "id":"heading",
         "default": "Career Listings"
      },
      {
         "type":"richtext",
         "label":"Text Content",
         "id":"text",
         "default": "<p>Weâ€™re looking for people to join the team who are as excited as we are to build positive global impact of supporting of customers, suppliers and network of growers and partners around the world. </p>"
      },
      {
         "type":"header",
         "content":"Settings"
      },
      {
         "type":"select",
         "id":"color_scheme",
         "options":[
            {
               "value":"cream",
               "label":"Cream (Default)"
            },
            {
               "value":"dark-cream",
               "label":"Dark Cream"
            },
            {
               "value":"grass",
               "label":"Grass"
            },
            {
               "value":"sun",
               "label":"Sun"
            },
            {
               "value":"ground",
               "label":"Ground"
            },
            {
               "value":"sky",
               "label":"Sky"
            },
            {
               "value":"tan",
               "label":"Tan"
            }
         ],
         "default":"cream",
         "label":"Color Scheme"
      },
      {
         "type":"range",
         "id":"top_spacing",
         "min":0,
         "max":100,
         "step":10,
         "unit":"%",
         "label":"Top Spacing",
         "default":50
      },
      {
         "type":"range",
         "id":"bottom_spacing",
         "min":0,
         "max":100,
         "step":10,
         "unit":"%",
         "label":"Bottom Spacing",
         "default":50
      }
   ],
   "blocks":[
      {
         "name":"Position",
         "type":"position",
         "settings":[
            {
               "type":"header",
               "content":"Text Content"
            },
            {
               "type":"text",
               "id":"heading",
               "label":"Title",
               "default": "Title"
            },
            {
               "type":"text",
               "id":"location",
               "label":"Location",
                "default": "Location"
            },
            {
               "type":"richtext",
               "id":"details",
               "label":"Details"
            },
            {
               "type":"header",
               "content":"Button"
            },
            {
               "type":"text",
               "id":"button_label",
               "default":"Apply Now",
               "label":"Apply Now"
            },
            {
               "type":"url",
               "id":"button_link",
               "label":"Button Link"
            },
            {
               "type":"select",
               "id":"button_color",
               "label":"Button Color",
               "default":"default",
               "options":[
                  {
                     "value":"default",
                     "label":"Default"
                  },
                  {
                     "value":"cream",
                     "label":"Cream"
                  },
                  {
                     "value":"dark-cream",
                     "label":"Dark Cream"
                  },
                  {
                     "value":"grass",
                     "label":"Grass"
                  },
                  {
                     "value":"sun",
                     "label":"Sun"
                  },
                  {
                     "value":"ground",
                     "label":"Ground"
                  },
                  {
                     "value":"sky",
                     "label":"Sky"
                  },
                  {
                     "value":"tan",
                     "label":"Tan"
                  }
               ]
            },
            {
              "type": "text",
              "id": "department",
              "label": "Department",
              "default": "General",
              "info": "You can categorize your positions into departments like 'Distribution' or 'Marketing'. If no department is written, this question will be cateorized as 'All'. The ability to navigate between departments will only display if there are two or more departments in this section."
            }
         ]
      }
   ],
   "presets":[
      {
         "name":"Career listings"
      }
   ]
}
{% endschema %}
