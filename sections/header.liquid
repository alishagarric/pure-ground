

{% assign className = "site-header" %}

{% comment %} Output navigation twice, one to display on scroll up and one that always exists at the top of the page content {% endcomment %}
{% for i in (1..2) %}
  {% assign style = "on-scroll" %}
  {% if forloop.index0 == 1 %}
    {% assign style = "relative" %}
  {% endif %}

  <{% if style == "on-scroll" %}sticky-header{% else %}header{% endif %} class="{{ className }} __style-{{ style }} {% if section.settings.always_show_nav %}__always-show-nav{% endif %}">

    {% comment %} Logo {% endcomment %}
    <a class="{{ className }}__logo" href="/">{% render 'svg-logo' %}</a>

    {% comment %} Mobile hamburger button and divider {% endcomment %}
    <hamburger-button class="{{ className }}__hamburger"><span></span></hamburger-button>
    <div class="{{ className }}__mobile-divider">{% render 'svg-divider' %}</div>


    {% comment %} All the links {% endcomment %}
    <div class="{{ className }}__main-links">

      {% for block in section.blocks %}
        {% case block.type %}

          {% comment %} Regular link (no nested links) {% endcomment %}
          {% when 'link' %}
            {% if block.settings.label and block.settings.link %}
              <a class="{{ className }}__plain-link p-sm" href="{{ block.settings.link }}" class="p-sm">{{ block.settings.label }}</a>
            {% endif %}

          {% comment %} Link with nested links (dropdown) {% endcomment %}
          {% when 'label' %}
            {% if block.settings.label %}
              {% assign labelIndex = forloop.index0 %}

                <dropdown-button class="{{ className }}__label p-sm">{{ block.settings.label }}</dropdown-button>
                <div class="{{ className }}__dropdown">
                  <div class="{{ className }}__dropdown__divider">{% render 'svg-divider' color: block.settings.color %}{% render 'svg-divider' color: block.settings.color %}</div>
                  {% for block in section.blocks %}
                    {% assign blockClassName = className | append: "__dropdown__block" %}

                    {% if forloop.index0 > labelIndex %}
                      {% case block.type %}
                        {% when 'link' %}
                          {% break %}
                        {% when 'label' %}
                          {% break %}
                        {% when 'submenu' %}
                          {% render 'nav-dropdown-submenu' menu: block.settings.menu, className: blockClassName %}
                        {% when 'text' %}
                          {% render 'nav-dropdown-text-block' heading: block.settings.heading, text: block.settings.text, button_label: block.settings.button_label, button_link: block.settings.button_link, className: blockClassName %}
                        {% when 'page' %}
                          {% render 'nav-dropdown-page' page: block.settings.page, image: block.settings.image, className: blockClassName %}
                        {% when 'articles' %}
                          {% render 'nav-dropdown-articles' menu: block.settings.menu, className: blockClassName %}

                      {% endcase %}
                    {% endif %}
                  {% endfor %}
                </div>
              {% endif %}
            

            {% comment %} CTA {% endcomment %}
            {% when 'cta' %}
              {% assign ctaClassName = className | append: "__cta" %}
              <div class="{{ ctaClassName }}">
                {% render 'button', class: ctaClassName, button_label: block.settings.button_label, button_link: block.settings.button_link %}
              </div>


        {% endcase %}
      {% endfor %}
    </div>

    {% comment %} All the icons/tools 
    <div class="{{ className }}__icons">

    </div>
    {% endcomment %}

  </{% if style == "on-scroll" %}sticky-header{% else %}header{% endif %}>
{% endfor %}

{% javascript %}

  class HamburgerButton extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    //Add a on click listener to every hamburger button
    setupListener() {
      this.addEventListener('click', this.updateOverlayNav.bind(this));
    }

    //toggle overlay nav
    updateOverlayNav(){
      //parent element for this section
      var thisSection = this.parentNode;

      this.classList.toggle("__active");
      document.body.classList.toggle('__mobile-overflow-none');

      if ( this.classList.contains('__active') ){
        thisSection.classList.add("__overlay-open");
      }
      else {
        thisSection.classList.remove("__overlay-open");
      }
    }
  }

  customElements.define('hamburger-button', HamburgerButton);

  class DropdownButton extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    //Add a on click listener to every dropdown button
    setupListener() {
      this.addEventListener('click', this.updateActiveDropdown.bind(this));
    }

    //on dropdown button click, updates what is active
    updateActiveDropdown() {

      //parent element for this section
      var thisSection = this.parentNode.parentNode;
      //all dropdowns in this section
      var dropdowns = thisSection.querySelectorAll('.site-header__label');

      //remove active class on nav buttons
      for (var i = 0; i < dropdowns.length; i++ ) {
        if (dropdowns[i] != this ) {
          dropdowns[i].classList.remove('__active');
        }
      }

      //add active class on clicked item
      this.classList.toggle('__active');

      if ( this.classList.contains('__active') ){
        thisSection.classList.add("__dropdown-open");
      }
      else {
        thisSection.classList.remove("__dropdown-open");
      }
    }
  }

  customElements.define('dropdown-button', DropdownButton);

  class StickyHeader extends HTMLElement {
    constructor() {
      super();

       document.addEventListener('scroll', this.updateClass.bind(this), false);
       document.lastScollPosition = 0;
    }

    updateClass(e) {
      //all dropdowns in header
      var dropdowns = document.querySelectorAll('.site-header__label');

      for (var i = 0; i < dropdowns.length; i++ ){
        dropdowns[i].classList.remove('__active');
      }
      
      let scrollPosition = window.pageYOffset;
      let lastScollPosition = e.currentTarget.lastScollPosition;
      let alwaysShowNav = this.classList.contains("__always-show-nav");
      let scrollingDown = false;
      if ( lastScollPosition < scrollPosition ) {
        scrollingDown = true;
      }

      if ( (!scrollingDown && scrollPosition > 200) || (scrollingDown && scrollPosition > 75)) {
        this.classList.add('__visible');
        this.parentNode.classList.add('__visible-nav');
      } else {
        this.classList.remove('__visible');
        this.parentNode.classList.remove('__visible-nav');
      }

      document.lastScollPosition = scrollPosition;
    }
  }

  customElements.define('sticky-header', StickyHeader);

{% endjavascript %}


{% comment %}



<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">
{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-loading-overlay.css' | asset_url }}" media="print" onload="this.media='all'">
  {%- endif -%}

  header-drawer {
    justify-self: start;
    margin-inline-start: -1.2rem;
  }

  @media screen and (min-width: 990px) {
    header-drawer {
      display: none;
    }
  }

  .menu-drawer-container {
    display: flex;
    position: static;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
    column-gap: 1.5rem;
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
{%- endstyle -%}

<link rel="stylesheet" href="{{ 'component-sticky-header.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">

{%- if settings.cart_drawer_enabled -%}
<link rel="stylesheet" href="{{ 'component-cart-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-discounts.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
  <link rel="stylesheet" href="{{ 'component-loading-overlay.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if enable_dropdown_menu -%}
  <link rel="stylesheet" href="{{ 'component-menu-dropdown.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'menu-dropdown.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- if enable_transparent_header -%}
  <link rel="stylesheet" href="{{ 'component-transparent-header.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<noscript>{{ 'component-sticky-header.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-list-menu.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-search.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-dropdown.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-menu-drawer.css' | asset_url | stylesheet_tag }}</noscript>

<script src="{{ 'search-modal.js' | asset_url }}" defer="defer"></script>
{%- if settings.cart_recommendations_enabled -%}
  <script src="{{ 'cart-recommendations.js' | asset_url }}" defer="defer"></script>
  <link rel="stylesheet" href="{{ 'component-cart-recommendations.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  {%- if section.settings.cart_icon == 'bag' %}
    <symbol id="icon-cart" fill="none" viewbox="0 0 24 24">
      <path d="M16 10V6a4 4 0 0 0-8 0v4" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" vector-effect="non-scaling-stroke"/>
      <path class="icon-fill" d="M20.46 15.44 18.39 21a1.39 1.39 0 0 1-1.27.93H6.88A1.39 1.39 0 0 1 5.61 21l-2.07-5.56-1.23-3.26c-.12-.34-.23-.62-.32-.85a17.28 17.28 0 0 1 20 0c-.09.23-.2.51-.32.85Z" fill="none"/>
      <path d="M20.46 15.44 18.39 21a1.39 1.39 0 0 1-1.27.93H6.88A1.39 1.39 0 0 1 5.61 21l-2.07-5.56-1.23-3.26c-.12-.34-.23-.62-.32-.85a17.28 17.28 0 0 1 20 0c-.09.23-.2.51-.32.85Z" fill="none" stroke="currentColor" stroke-miterlimit="10" vector-effect="non-scaling-stroke"/>
    </symbol>
  {% else %}
    <symbol id="icon-cart" fill="none" viewbox="0 0 18 19">
      <path d="M3.09333 5.87954L16.2853 5.87945V5.87945C16.3948 5.8795 16.4836 5.96831 16.4836 6.07785V11.4909C16.4836 11.974 16.1363 12.389 15.6603 12.4714C11.3279 13.2209 9.49656 13.2033 5.25251 13.9258C4.68216 14.0229 4.14294 13.6285 4.0774 13.0537C3.77443 10.3963 2.99795 3.58502 2.88887 2.62142C2.75288 1.42015 0.905376 1.51528 0.283581 1.51478" stroke="currentColor"/>
      <path d="M13.3143 16.8554C13.3143 17.6005 13.9183 18.2045 14.6634 18.2045C15.4085 18.2045 16.0125 17.6005 16.0125 16.8554C16.0125 16.1104 15.4085 15.5063 14.6634 15.5063C13.9183 15.5063 13.3143 16.1104 13.3143 16.8554Z" fill="currentColor"/>
      <path d="M3.72831 16.8554C3.72831 17.6005 4.33233 18.2045 5.07741 18.2045C5.8225 18.2045 6.42651 17.6005 6.42651 16.8554C6.42651 16.1104 5.8225 15.5063 5.07741 15.5063C4.33233 15.5063 3.72831 16.1104 3.72831 16.8554Z" fill="currentColor"/>
    </symbol>
  {% endif -%}
  <symbol id="icon-close" fill="none" viewBox="0 0 12 12">
    <path d="M1 1L11 11" stroke="currentColor" stroke-linecap="round" fill="none"/>
    <path d="M11 1L1 11" stroke="currentColor" stroke-linecap="round" fill="none"/>
  </symbol>
  <symbol id="icon-search" fill="none" viewBox="0 0 15 17">
    <circle cx="7.11113" cy="7.11113" r="6.56113" stroke="currentColor" fill="none"/>
    <path d="M11.078 12.3282L13.8878 16.0009" stroke="currentColor" stroke-linecap="round" fill="none"/>
  </symbol>
</svg>

<{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %} class="header-wrapper{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}{% if enable_transparent_header %} header-transparent{% if section.settings.show_transparent_header_border %} header-transparent--border-bottom{% endif %}{% endif %}">
  <header class="header header--{{ section.settings.logo_position }} page-width{% if section.settings.menu != blank %} header--has-menu{% endif %} section-{{ section.id }}-padding">
    {%- if section.settings.menu != blank -%}
      <header-drawer>
        <details class="menu-drawer-container">
          <summary class="header__icon header__icon--menu focus-inset" aria-label="{{ 'sections.header.menu' | t }}">
            <span class="header__icon header__icon--summary">
              {% render 'icon', icon: 'hamburger' %}
              <svg class="icon icon-close" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-close">
              </svg>
            </span>
          </summary>
          <div id="menu-drawer" class="menu-drawer motion-reduce" tabindex="-1">
            <div class="menu-drawer__inner-container">
              <div class="menu-drawer__navigation-container">
                <nav class="menu-drawer__navigation" data-animate data-animate-delay-1>
                  <ul class="menu-drawer__menu list-menu" role="list">
                    {%- for link in section.settings.menu.links -%}
                      <li>
                        {%- if link.links != blank -%}
                          <details>
                            <summary>
                              <span class="menu-drawer__menu-item list-menu__item animate-arrow focus-inset{% if link.active or link.child_active %} menu-drawer__menu-item--active{% endif %}">
                                {%- liquid
                                  echo link.title | escape
                                  render 'icon', icon: 'arrow'
                                  render 'icon', icon: 'caret'
                                -%}
                              </span>
                            </summary>
                            <div id="link-{{ link.title | escape }}" class="menu-drawer__submenu motion-reduce" tabindex="-1">
                              <div class="menu-drawer__inner-submenu">
                                <div class="menu-drawer__topbar">
                                  <button class="menu-drawer__close-button focus-inset" aria-expanded="true">
                                    {% render 'icon', icon: 'arrow' %}
                                  </button>
                                  <a class="menu-drawer__menu-item" href="{{ link.url }}">{{ link.title | escape }}</a>
                                </div>
                                <ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
                                  {%- for childlink in link.links -%}
                                    <li>
                                      {%- if childlink.links == blank -%}
                                        <a href="{{ childlink.url }}" class="menu-drawer__menu-item list-menu__item focus-inset{% if childlink.current %} menu-drawer__menu-item--active{% endif %}"{% if childlink.current %} aria-current="page"{% endif %}>
                                          {{ childlink.title | escape }}
                                        </a>
                                      {%- else -%}
                                        <details>
                                          <summary>
                                            <span class="menu-drawer__menu-item list-menu__item animate-arrow focus-inset">
                                              {%- liquid
                                                echo childlink.title | escape
                                                render 'icon', icon: 'arrow'
                                                render 'icon', icon: 'caret'
                                              -%}
                                            </span>
                                          </summary>
                                          <div id="childlink-{{ childlink.title | escape }}" class="menu-drawer__submenu motion-reduce">
                                            <div class="menu-drawer__topbar">
                                              <button class="menu-drawer__close-button focus-inset" aria-expanded="true">
                                                {% render 'icon', icon: 'arrow' %}
                                              </button>
                                              <a class="menu-drawer__menu-item" href="{{ childlink.url }}">{{ childlink.title | escape }}</a>
                                            </div>
                                            <ul class="menu-drawer__menu list-menu" role="list" tabindex="-1">
                                              {%- for grandchildlink in childlink.links -%}
                                                <li>
                                                  <a href="{{ grandchildlink.url }}" class="menu-drawer__menu-item list-menu__item focus-inset{% if grandchildlink.current %} menu-drawer__menu-item--active{% endif %}"{% if grandchildlink.current %} aria-current="page"{% endif %}>
                                                    {{ grandchildlink.title | escape }}
                                                  </a>
                                                </li>
                                              {%- endfor -%}
                                            </ul>
                                          </div>
                                        </details>
                                      {%- endif -%}
                                    </li>
                                  {%- endfor -%}
                                </ul>
                              </div>
                            </div>
                          </details>
                        {%- else -%}
                          <a href="{{ link.url }}" class="menu-drawer__menu-item list-menu__itemfocus-inset{% if link.current %} menu-drawer__menu-item--active{% endif %}"{% if link.current %} aria-current="page"{% endif %}>
                            {{ link.title | escape }}
                          </a>
                        {%- endif -%}
                      </li>
                    {%- endfor -%}
                  </ul>
                </nav>
                <div class="menu-drawer__utility-links" data-animate data-animate-delay-2>
                  {%- if shop.customer_accounts_enabled -%}
                    <a href="{% if customer %}{{ routes.account_url }}{% else %}{{ routes.account_login_url }}{% endif %}" class="menu-drawer__account link link-with-icon focus-inset">
                      {% render 'icon', icon: 'account' %}
                      <span class="label">
                        {%- liquid
                          if customer
                            echo 'customer.account_fallback' | t
                          else
                            echo 'customer.log_in' | t
                          endif
                        -%}
                      </span>
                    </a>
                  {%- endif -%}
                  <ul class="list list-social list-unstyled" role="list">
                    {%- render 'social-icons' -%}
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </details>
      </header-drawer>
    {%- endif -%}

    {%- if section.settings.logo_position == 'top-center' or section.settings.logo_position == 'center-split' or section.settings.menu == blank -%}
      <search-modal class="header__search">
        <details>
          <summary class="header__icon header__icon--summary header__icon--search focus-inset modal__toggle" aria-haspopup="dialog" aria-label="{{ 'general.search.search' | t }}">
            <span>
              <svg class="icon icon-search modal__toggle-open" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-search">
              </svg>
              <svg class="icon icon-close modal__toggle-close" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-close">
              </svg>
            </span>
          </summary>
          {% render 'search-modal' %}
        </details>
      </search-modal>
    {%- endif -%}

    {%- liquid
      if section.settings.menu != blank and section.settings.logo_position == 'center-split'
        render 'desktop-menu', menu: section.settings.menu, enable_dropdown_menu: enable_dropdown_menu, blocks: section.blocks, limit: link_count_half
      endif
    -%}

    {%- if request.page_type == 'index' -%}
      <h1 class="header__heading">
    {%- endif -%}
        <a href="{{ routes.root_url }}" class="header__heading-link focus-inset">
          {%- if section.settings.logo != blank -%}
            {%- liquid
              assign logo = section.settings.logo
              assign logo_height = section.settings.logo_height
              assign logo_height_2x = section.settings.logo_height | times: 2

              assign mobile_logo = section.settings.mobile_logo | default: logo
              assign mobile_logo_height = section.settings.mobile_logo_height
              assign mobile_logo_height_2x = section.settings.mobile_logo_height | times: 2

              assign transparent_logo = section.settings.transparent_logo
              assign mobile_transparent_logo = section.settings.mobile_transparent_logo | default: transparent_logo
            -%}

            {%- if mobile_logo -%}
              <img srcset="{{ mobile_logo | image_url: height: mobile_logo_height }} 1x, {{ mobile_logo | image_url: height: mobile_logo_height_2x }} 2x"
                src="{{ mobile_logo | image_url: height: mobile_logo_height }}"
                loading="lazy"
                width="{{ mobile_logo.width }}"
                height="{{ mobile_logo.height }}"
                alt="{{ mobile_logo.alt | default: shop.name | escape }}"
                class="header__heading-logo{% if enable_transparent_header and transparent_logo != blank %} normal{% endif %} medium-hide large-up-hide"
              />
            {%- endif -%}

            <img srcset="{{ logo | image_url: height: logo_height }} 1x, {{ logo | image_url: height: logo_height_2x }} 2x"
              src="{{ logo | image_url: height: logo_height }}"
              loading="lazy"
              width="{{ logo.width }}"
              height="{{ logo.height }}"
              alt="{{ logo.alt | default: shop.name | escape }}"
              class="header__heading-logo{% if enable_transparent_header and transparent_logo != blank %} normal{% endif %}{% if mobile_logo %} small-hide{% endif %}"
            />

            {%- if enable_transparent_header and transparent_logo != blank -%}
              {%- if mobile_transparent_logo != blank -%}
                <img
                  srcset="{{ mobile_transparent_logo | image_url: height: mobile_logo_height }} 1x, {{ mobile_transparent_logo | image_url: height: mobile_logo_height_2x }} 2x"
                  src="{{ mobile_transparent_logo | image_url: height: mobile_logo_height }}"
                  loading="lazy"
                  width="{{ mobile_transparent_logo.width }}"
                  height="{{ mobile_transparent_logo.height }}"
                  alt="{{ mobile_transparent_logo.alt | default: shop.name | escape }}"
                  class="header__heading-logo inverse medium-hide large-up-hide"
                />
              {%- endif -%}

              <img
                srcset="{{ transparent_logo | image_url: height: logo_height }} 1x, {{ transparent_logo | image_url: height: logo_height_2x }} 2x"
                src="{{ transparent_logo | image_url: height: logo_height }}"
                loading="lazy"
                width="{{ transparent_logo.width }}"
                height="{{ transparent_logo.height }}"
                alt="{{ transparent_logo.alt | default: shop.name | escape }}"
                class="header__heading-logo inverse{% if mobile_transparent_logo %} small-hide{% endif %}"
              />
            {%- endif -%}
          {%- else -%}
            <span class="h2">{{ shop.name }}</span>
          {%- endif -%}
        </a>
    {%- if request.page_type == 'index' -%}
      </h1>
    {%- endif -%}

    {%- liquid
      if section.settings.menu != blank
        if section.settings.logo_position == 'center-split'
          render 'desktop-menu', menu: section.settings.menu, enable_dropdown_menu: enable_dropdown_menu, blocks: section.blocks, offset: link_count_half
        else
          render 'desktop-menu', menu: section.settings.menu, enable_dropdown_menu: enable_dropdown_menu, blocks: section.blocks
        endif
      endif
    -%}

    <div class="header__icons">
      <search-modal class="header__search">
        <details>
          <summary class="header__icon header__icon--summary header__icon--search focus-inset modal__toggle" aria-haspopup="dialog" aria-label="{{ 'general.search.search' | t }}">
            <span>
              <svg class="icon icon-search modal__toggle-open" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-search">
              </svg>
              <svg class="icon icon-close modal__toggle-close" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-close">
              </svg>
            </span>
          </summary>
          {% render 'search-modal' %}
        </details>
      </search-modal>

      {%- if shop.customer_accounts_enabled -%}
        <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="header__icon header__icon--account focus-inset small-hide">
          {% render 'icon', icon: 'account' %}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- if request.page_type != 'cart' and settings.cart_drawer_enabled -%}
        <cart-drawer>
          <details class="cart-drawer-container">
            <summary class="header__icon focus-inset">
              <span class="header__icon header__icon--summary header__icon--cart" id="cart-icon-bubble">
                <svg class="icon icon-cart" aria-hidden="true" focusable="false" role="presentation">
                  <use href="#icon-cart">
                </svg>
                <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
                {%- if cart != empty -%}
                  <span class="cart-count-bubble{% if cart.item_count >= 100 %} cart-count-bubble--dot{% endif %}">
                    {%- if cart.item_count < 100 -%}
                      <span aria-hidden="true">{{ cart.item_count }}</span>
                    {%- endif -%}
                    <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
                  </span>
                {%- endif -%}
              </span>
            </summary>
            <mini-cart class="cart-drawer focus-inset" id="mini-cart" data-url="{{ routes.root }}?section_id=mini-cart">
              <div class="loading-overlay">
                <div class="loading-overlay__spinner">
                  {% render 'icon', icon: 'spinner' %}
                </div>
              </div>
            </mini-cart>
          </details>
          <noscript>
            <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart focus-inset">
              <svg class="icon icon-cart" aria-hidden="true" focusable="false" role="presentation">
                <use href="#icon-cart">
              </svg>
              <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
              {%- if cart != empty -%}
                <div class="cart-count-bubble{% if cart.item_count >= 100 %} cart-count-bubble--dot{% endif %}">
                  {%- if cart.item_count < 100 -%}
                    <span aria-hidden="true">{{ cart.item_count }}</span>
                  {%- endif -%}
                  <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
                </div>
              {%- endif -%}
            </a>
          </noscript>
        </cart-drawer>
      {%- else -%}
        <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart focus-inset" id="cart-icon-bubble">
          <svg class="icon icon-cart" aria-hidden="true" focusable="false" role="presentation">
            <use href="#icon-cart">
          </svg>
          <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
          {%- if cart != empty -%}
            <span class="cart-count-bubble{% if cart.item_count >= 100 %} cart-count-bubble--dot{% endif %}">
              {%- if cart.item_count < 100 -%}
                <span aria-hidden="true">{{ cart.item_count }}</span>
              {%- endif -%}
              <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
            </span>
          {%- endif -%}
        </a>
      {%- endif -%}
    </div>
  </header>
  <span class="header-background"></span>
</{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %}>

{% javascrip %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.getElementById('shopify-section-header');
      this.headerBounds = {};
      this.currentScrollTop = 0;
      this.preventReveal = false;

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;

        if (this.headerBounds.top === 0 && this.headerBounds.bottom === 0) {
          const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
          const boundingClientRect = entries[0].boundingClientRect;

          this.headerBounds = {
            top: scrollTop + boundingClientRect.top,
            bottom: scrollTop + boundingClientRect.bottom
          };
        }
        this.currentScrollTop = this.headerBounds.bottom + 300;

        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (theme.config.mqlSmall) {
        if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
          requestAnimationFrame(this.hide.bind(this));
        }
        else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
          if (!this.preventReveal) {
            requestAnimationFrame(this.reveal.bind(this));
          }
          else {
            window.clearTimeout(this.isScrolling);

            this.isScrolling = setTimeout(() => {
              this.preventReveal = false;
            }, 66);

            requestAnimationFrame(this.hide.bind(this));
          }
        }
        else if (scrollTop <= this.headerBounds.top) {
          requestAnimationFrame(this.reset.bind(this));
        }

        this.currentScrollTop = scrollTop;
      }
      else {
        if (scrollTop > this.currentScrollTop) {
          requestAnimationFrame(this.reveal.bind(this));
        }
        else {
          requestAnimationFrame(this.hide.bind(this));

          if (scrollTop <= this.headerBounds.bottom) {
            requestAnimationFrame(this.reset.bind(this));
          }
        }
      }
    }

    hide() {
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
    }

    reveal() {
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    sticky() {
      return this.header.classList.contains('shopify-section-header-sticky') && !this.header.classList.contains('shopify-section-header-hidden');
    }
  }
  customElements.define('sticky-header', StickyHeader);
{% endjavascrip %}

{% endcomment %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>


{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

<script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "id": "always_show_nav",
      "type": "checkbox",
      "label": "Don't hide navigation bar on scroll down?",
      "default": false
    }
  ],
"blocks": [
    {
      "type": "link",
      "name": "Normal Link",
      "settings": [
        {
          "type": "header",
          "content": "Normal link in navigation",
          "info": "Navigates to new a new page when clicked on."
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    },
    {
      "type": "label",
      "name": "Dropdown Label",
      "settings": [
        {
          "type": "header",
          "content": "Label in naviation",
          "info": "Displays a dropdown when clicked on. All items after this up until the next normal link or dropdown label will be included beneath this label's dropdown."
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label"
        },
        {
          "type": "color",
          "id": "color",
          "label": "Label's associated color",
          "info": "Applied to the divider when it's dropdown is displayed"
        }
      ]
    },
    {
      "type": "submenu",
      "name": "Submenu in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Collection of links displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "link_list",
          "id": "menu",
          "label": "Menu",
          "info": "Displays only top-level menu items. Create this menu under 'Navigation'"
        }
      ]
    },
    {
      "type": "text",
      "name": "Text Block in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Text block displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        }
      ]
    },
    {
      "type": "page",
      "name": "Featured Page in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Featured page displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "page",
          "id": "page",
          "label": "Page"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "Should represent chosen page"
        }
      ]
    },
    {
      "type": "articles",
      "name": "Articles in Dropdown",
      "settings": [
        {
          "type": "header",
          "content": "Collection of articles displayed in a dropdown",
          "info": "Make sure you add a dropdown label at some point before this item in order to know which dropdown this belongs in."
        },
        {
          "type": "link_list",
          "id": "menu",
          "label": "Menu",
          "info": "Displays only top-level menu items. Create this menu under 'Navigation' and add only article items to it."
        }
      ]  
    },
    {
      "type": "cta",
      "name": "Call To Action",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        }
      ]  
    }
  ]
}
{% endschema %}
