<article class="main-article color-dark-cream" itemscope itemtype="http://schema.org/BlogPosting">

  <div class="main-article__sticky-header">
    <div class="main-article__sticky-header__title h5">{{article.title}}</div>
    {% comment %}{% render 'share-article' %}{% endcomment %}
    <progress-bar class="main-article__sticky-header__progress"></progress-bar>
  </div>


  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when '@app' -%}
        <div class="main-article__app-block">
          {% render block %}
        </div>
    {%- endcase -%}
  {%- endfor -%}

  {%- if article.image -%}
    <div class="main-article__image" {{ block.shopify_attributes }} itemprop="image">
      {% render 'next-gen-img', image: article.image %}
    </div>
  {%- endif -%}


  <header class="main-article__header" {{ block.shopify_attributes }}>
    <h1 class="main-article__header__title h4" itemprop="headline">{{ article.title | escape }}</h1>
    <div class="main-article__header__details">
      <span class="main-article__date caption-sm" itemprop="dateCreated pubdate datePublished">{{ article.published_at | time_tag: format: 'date' }}</span>
      <span class="main-article__author caption-sm" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <span itemprop="name">{{ article.author }}</span>
      </span>
      <a href="{{ blog.url }}" class="main-article__category caption-sm">
        {{ blog.title }}
      </a>
    </div>
  </header>

  <div class="main-article__content __article-txt-p-sm" itemprop="articleBody" {{ block.shopify_attributes }}>
    {{ article.content }}
  </div>
  
  {% render 'article-comments' %}

</article>


{% render 'related-articles' article: article, blog: blog %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Article",
    "articleBody": {{ article.content | strip_html | json }},
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": {{ shop.url | append: page.url | json }}
    },
    "headline": {{ article.title | json }},
    {% if article.excerpt != blank %}
      "description": {{ article.excerpt | strip_html | json }},
    {% endif %}
    {% if article.image %}
      {% assign image_size = article.image.width | append: 'x' %}
      "image": [
        {{ article | img_url: image_size | prepend: "https:" | json }}
      ],
    {% endif %}
    "datePublished": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "dateCreated": {{ article.created_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "author": {
      "@type": "Person",
      "name": {{ article.author | json }}
    },
    "publisher": {
      "@type": "Organization",
      {% if settings.share_image %}
        {% assign image_size = settings.share_image.width | append: 'x' %}
        "logo": {
          "@type": "ImageObject",
          "height": {{ settings.share_image.height | json }},
          "url": {{ settings.share_image | img_url: image_size | prepend: "https:" | json }},
          "width": {{ settings.share_image.width | json }}
        },
      {% endif %}
      "name": {{ shop.name | json }}
    }
  }
  </script>



{% javascript %}

class ProgressBar extends HTMLElement {
    constructor() {
      super();
       document.addEventListener('scroll', this.updateScale.bind(this), false);
    }

    updateScale(e) {

      let navHeight = document.querySelector('.site-header').clientHeight;
      let windowHeight = window.innerHeight;

      let articleHeight = this.parentElement.parentElement.clientHeight + navHeight;
      let lastScollPosition = e.currentTarget.lastScollPosition;

      let percent = lastScollPosition > (articleHeight - windowHeight) ? 1 : (lastScollPosition / (articleHeight - windowHeight) );
      this.style.transform = "scaleX(" + percent + ")";
    }
  }

  customElements.define('progress-bar', ProgressBar);

{% endjavascript %}



{% schema %}
{
  "name": "t:sections.main-article.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
