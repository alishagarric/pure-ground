{% style %}
    #Main-list-collections-{{ section.id }} {
      --topSpacingRatio: {{section.settings.top_spacing}} / 100;
      --bottomSpacingRatio: {{section.settings.bottom_spacing}} / 100;
    }
 {% endstyle %}

  {%- liquid
    case section.settings.sort
      when 'products_high' or 'products_low'
        assign collections = collections | sort: 'all_products_count'
      when 'date' or 'date_reversed'
        assign collections = collections | sort: 'published_at'
    endcase

    if section.settings.sort == 'products_high' or section.settings.sort == 'date_reversed' or section.settings.sort == 'alphabetical_reversed'
      assign collections = collections | reverse
    endif
  -%}


<div id="Main-list-collections-{{ section.id }}" class="main-list-collections color-{{section.settings.color_scheme}}">
  {% if section.settings.heading %}
    <h2 class="main-list-collections__heading h3">{{ section.settings.heading }}</h2>
  {% endif %}

  <toggle-modal class="main-list-collections__container" data-type="container">
    {% for collection in collections %}
      {% render 'collection-card', collection: collection, shape: "square" %}
    {% endfor %}
  </toggle-modal>

  {% render 'modal' %}
</div>

{% javascript %}

  class ToggleModal extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    setupListener() {
      this.addEventListener('click', this.toggleModal.bind(this));
    }

    toggleModal() {
      var modal = this.getAttribute('data-type') == "modal" ? this : this.nextElementSibling;
      modal.classList.toggle("__active");
    }
  }

  customElements.define('toggle-modal', ToggleModal);

  //Ingredients Filter

 let searchField = document.querySelector('.spec-sheets__info__search__input');
 let filterValue = '';

  searchField.addEventListener("input", function() {
    filterValue=searchField.value.toLowerCase();
    console.log(filterValue,'filtervalue here');
     allItems.map((name)=>{
      console.log(allItems, ' all tiems');
      if(name.innerHTML.toLowerCase().includes(filterValue)){
         name.classList.remove('hide');
      }
      else{
            name.classList.add('hide');
      }
    })
  });

  let allItems = document.querySelectorAll('.spec-sheets__item');
  allItems = [...allItems];


{% endjavascript %}

{% schema %}
{
  "name": "t:sections.main-list-collections.name",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "Text Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Collections"
    },
    {
      "type": "header",
      "content": "Sorting"
    },
    {
      "type": "select",
      "id": "sort",
      "options": [
        {
          "value": "alphabetical",
          "label": "t:sections.main-list-collections.settings.sort.options__1.label"
        },
        {
          "value": "alphabetical_reversed",
          "label": "t:sections.main-list-collections.settings.sort.options__2.label"
        },
        {
          "value": "date_reversed",
          "label": "t:sections.main-list-collections.settings.sort.options__3.label"
        },
        {
          "value": "date",
          "label": "t:sections.main-list-collections.settings.sort.options__4.label"
        },
        {
          "value": "products_high",
          "label": "t:sections.main-list-collections.settings.sort.options__5.label"
        },
        {
          "value": "products_low",
          "label": "t:sections.main-list-collections.settings.sort.options__6.label"
        }
      ],
      "default": "alphabetical",
      "label": "t:sections.main-list-collections.settings.sort.label"
    },
    {
      "type": "header",
      "content": "Settings"
    },
    {
    "type": "select",
    "id": "color_scheme",
    "options": [
      {
        "value": "cream",
        "label": "Cream (Default)"
      },
      {
        "value": "dark-cream",
        "label": "Dark Cream"
      },
      {
        "value": "grass",
        "label": "Grass"
      },
      {
        "value": "sun",
        "label": "Sun"
      },
      {
        "value": "ground",
        "label": "Ground"
      },
      {
        "value": "sky",
        "label": "Sky"
      },
      {
        "value": "tan",
        "label": "Tan"
      }
      ],
      "default": "cream",
      "label": "Color Scheme"
    },
     {
      "type": "range",
      "id": "top_spacing",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "Top Spacing",
      "default": 50
    },
    {
      "type": "range",
      "id": "bottom_spacing",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "Bottom Spacing",
      "default": 50
    }
  ]
}
{% endschema %}
